// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2019-04-14 12:26:05.437815 +0900 JST m=+0.040682441

package docs

import (
	"bytes"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "swagger": "2.0",
    "info": {
        "description": "This is a Spider API server.",
        "title": "Spider API",
        "contact": {},
        "license": {
            "name": "MIT"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/articles": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "articles"
                ],
                "summary": "Get articles",
                "parameters": [
                    {
                        "type": "string",
                        "default": "2019-01-19T14:13:01Z",
                        "description": "Only articles published at or after this time are returned.",
                        "name": "since",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "2019-01-19T14:13:01Z",
                        "description": "Unused parameter (deprecated)",
                        "name": "until",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "desc",
                            "asc"
                        ],
                        "type": "string",
                        "default": "desc",
                        "description": "The direction of the sort by pub_date",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "maximum": 50,
                        "minimum": 1,
                        "type": "integer",
                        "default": 50,
                        "description": "The number of articles that you can get the result",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/entity.Article"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "articles"
                ],
                "summary": "Add a new article",
                "parameters": [
                    {
                        "description": "article",
                        "name": "article",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/form.CreateArticleForm"
                        }
                    }
                ],
                "responses": {
                    "200": {}
                }
            }
        }
    },
    "definitions": {
        "entity.Article": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2019-04-06T16:03:31Z"
                },
                "id": {
                    "type": "string",
                    "example": "faf9c3a7-b3ee-441f-baec-a5b668948381"
                },
                "pub_date": {
                    "type": "string",
                    "example": "2019-01-19T14:13:01Z"
                },
                "title": {
                    "type": "string",
                    "example": "AWS CDKでサーバーレスアプリケーションのデプロイを試す"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2019-04-06T16:03:31Z"
                },
                "url": {
                    "type": "string",
                    "example": "https://blog.kentarom.com/learn-aws-cdk/"
                }
            }
        },
        "form.CreateArticleForm": {
            "type": "object",
            "required": [
                "pub_date",
                "title",
                "url"
            ],
            "properties": {
                "pub_date": {
                    "type": "string",
                    "example": "2019-01-19T14:13:01Z"
                },
                "title": {
                    "type": "string",
                    "example": "AWS CDKでサーバーレスアプリケーションのデプロイを試す"
                },
                "url": {
                    "type": "string",
                    "example": "https://blog.kentarom.com/learn-aws-cdk/"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo swaggerInfo

type s struct{}

func (s *s) ReadDoc() string {
	t, err := template.New("swagger_info").Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, SwaggerInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
